<% nested ||= false %>
<%
if !defined?(simple)
  simple = Myp.param_bool(params, :simple)
end
%>

<%
  name_field = myp_text_field(f, :name, "myplaceonline.locations.name", obj.name)
  address1_field = myp_text_field(f, :address1, "myplaceonline.locations.address1", obj.address1, autofocus)
  address2_field = myp_text_field(f, :address2, "myplaceonline.locations.address2", obj.address2)
  address3_field = myp_text_field(f, :address3, "myplaceonline.locations.address3", obj.address3)
  region_field = myp_region_field(f, :region, "myplaceonline.general.region", obj.region)
  postal_code_field = myp_text_field(f, :postal_code, "myplaceonline.locations.postal_code", obj.postal_code)
  sub_region2_field = myp_text_field(f, :sub_region2, "myplaceonline.general.sub_region2", obj.sub_region2)
  sub_region1_field = myp_subregion_field(f, :sub_region1, "myplaceonline.general.sub_region1", obj.region, obj.sub_region1)
%>
<%= name_field %>
<%= address1_field %>
<%= address2_field %>
<%= address3_field %>
<%= region_field %>
<%= postal_code_field %>
<%= sub_region2_field %>
<%= sub_region1_field %>
<%
  # We need a text field because otherwise we can't support parsing a "latitude,longitude" format
  # See https://stackoverflow.com/questions/18852244/how-to-get-the-raw-value-an-input-type-number-field
  latitude_field = myp_text_field(f, :latitude, "myplaceonline.locations.latitude", obj.latitude)
  longitude_field = myp_decimal_field(f, :longitude, "myplaceonline.locations.longitude", obj.longitude, false, nil, 0.00000000000000000001)
  random_name = SecureRandom.hex(10)
%>
<%= latitude_field %>
<%= longitude_field %>

<script>
$("#<%= extract_id(postal_code_field) %>").on("input propertychange paste", function(x) {
  var $this = $(this);
  var postal_code = $this.val();
  if (postal_code.length == 5) {
    var queryCount = $this.data("queryCount");
    if (!queryCount) {
      queryCount = 0;
    }
    queryCount++;
    $this.data("queryCount", queryCount);
    myplaceonline.showLoading();
    $.ajax({
      url: myplaceonline.createUrl("/api/postal_code_search"),
      method: "GET",
      dataType: "json",
      context: {
        postal_code_field: $this,
        queryCount: queryCount
      },
      data: {
        q: postal_code,
        region: $("#<%= extract_id(region_field) %>").val()
      }
    }).done(function(data, textStatus, jqXHR) {
      // Responses can come in out-of-order; only take the latest
      if (this.postal_code_field.data("queryCount") == this.queryCount && data.result) {
        var sub_region1_field = $("#<%= extract_id(sub_region1_field) %>");
        sub_region1_field.val(data.sub_region1);
        sub_region1_field.selectmenu("refresh");
        $("#<%= extract_id(sub_region2_field) %>").val(data.sub_region2);
        myplaceonline.createSuccessNotification(data.looked_up_postal_code);
      }
    }).fail(function(jqXHR, textStatus, errorThrown) {
      myplaceonline.handleAjaxFailure(jqXHR, textStatus, errorThrown, "Could not find details for postal code " + postal_code, myplaceonline.createUrl("/api/postal_code_search"));
    }).complete(function(jqXHR, textStatus) {
      myplaceonline.hideLoading();
    });
  }
});

$("#<%= extract_id(latitude_field) %>").on("input propertychange paste", function(x) {
  var $this = $(this);
  var latitude_value = $this.val();
  var i = latitude_value.indexOf(",");
  if (i != -1) {
    var cut_left = latitude_value.substring(0, i).trim();
    var cut_right = latitude_value.substring(i + 1).trim();
    $this.val(cut_left);
    $("#<%= extract_id(longitude_field) %>").val(cut_right);
  }
});

function location_gps_success<%= random_name %>(location) {
  $("#<%= extract_id(latitude_field) %>").val(location.coords.latitude);
  $("#<%= extract_id(longitude_field) %>").val(location.coords.longitude);
  myplaceonline.createSuccessNotification("GPS coordinates updated");
}

$("#<%= extract_id(name_field) %>,#<%= extract_id(address1_field) %>").on("input propertychange paste", function(x) {
  var $this = $(this);
  var val = $this.val();
  
  // If the value contains a zip code, then do a lookup on that, and truncate the regions
  var match = val.match(/(\d+)\s*$/);
  if (match) {
    var zip = match[1];
    if (zip.length == 5) {
      $("#<%= extract_id(postal_code_field) %>").val(zip);
      
      $("#<%= extract_id(postal_code_field) %>").trigger("propertychange");
      
      // Now truncate
      var match2 = val.match(/^(.*?)\s*,\s*[^,]+,\s*[^\d]+\d+\s*$/);
      if (match2) {
        $this.val(match2[1]);
      } else {
        var match3 = val.match(/^([^,]+),\s*[^\d]+\d+\s*$/);
        if (match3) {
          $this.val(match3[1]);
        }
      }
    }
  }
});
</script>

<a href="#" onclick="return myplaceonline.requestGPS2(location_gps_success<%= random_name %>);" class="ui-btn"><%= t("myplaceonline.locations.request_gps") %></a>
<%=
  input_field(
    form: f,
    type: Myp::FIELD_TEXT,
    name: :bathroom_code,
    value: obj.bathroom_code,
    placeholder: "myplaceonline.locations.bathroom_code"
  )
%>
<%=
  input_field(
    form: f,
    type: Myp::FIELD_BOOLEAN,
    name: :allhours,
    value: obj.allhours,
    placeholder: "myplaceonline.locations.allhours"
  )
%>
<%=
  input_field(
    form: f,
    type: Myp::FIELD_BOOLEAN,
    name: :prefer_latlng,
    value: obj.prefer_latlng,
    placeholder: "myplaceonline.locations.prefer_latlng"
  )
%>
<%=
  input_field(
    form: f,
    type: Myp::FIELD_TEXT_AREA,
    name: :notes,
    value: obj.notes,
    placeholder: "myplaceonline.general.notes",
    collapsed: obj.notes.blank?,
    placeholder_prefix: Myp.instance_to_category_human_readable(obj).singularize,
  )
%>
<% if !simple %>
  <%=
    render layout: "myplaceonline/childproperties", locals: {
      f: f,
      heading: t("myplaceonline.locations.phones"),
      childpropertiesname: :location_phones,
      childproperties: obj.location_phones,
      deletebutton: t("myplaceonline.locations.delete_phone"),
      addbutton: t("myplaceonline.locations.add_phone"),
      expanded: obj.location_phones.length > 0,
      formjson: [
        {
          type: 'text',
          name: 'number',
          placeholder: t("myplaceonline.locations.phone"),
          autofocus: true
        }
      ]
    } do |child_fields, childproperty|
  %>
    <%= myp_text_field(child_fields, :number, "myplaceonline.locations.phone", childproperty.number) %>
  <% end %>
  <%=
    render partial: "myplaceonline/select_or_create", locals: {
      f: f,
      name: :website,
      existingobj: obj.website,
      heading: t("myplaceonline.locations.website"),
      objform: "websites/form",
      existingobjurl: "website_path",
      searchurl: "/websites.json?perpage=0",
      edit: edit,
      autofocus: false
    }
  %>
  <%=
    render partial: "myplaceonline/pictures_form", locals: {
      f: f,
      obj: obj,
      pictures_field: :location_pictures
    }
  %>
<% end %>
