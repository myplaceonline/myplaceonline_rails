<%= f.fields_for(:company_identity, obj.company_identity) do |identity_fields| %>

  <%
  if !defined?(simpleform)
    simpleform = Myp.param_bool(params, :simpleform)
  end
  %>

  <%= myp_hidden_field(identity_fields, :_updatetype, AllowExistingConcern::UPDATE_TYPE_COMBINE.to_s) %>
  <%= myp_hidden_field(identity_fields, :identity_type, obj.company_identity.identity_type) %>
  <%= myp_text_field(identity_fields, :name, "myplaceonline.companies.name", obj.company_identity.name, autofocus) %>
  
  <%=
    render(layout: "myplaceonline/childproperties", locals: {
      f: identity_fields,
      heading: t("myplaceonline.identities.emails"),
      childpropertiesname: :identity_emails,
      childproperties: obj.company_identity.identity_emails,
      deletebutton: t("myplaceonline.identities.delete_email"),
      addbutton: t("myplaceonline.identities.add_email"),
      expanded: obj.company_identity.identity_emails.length > 0,
      formjson: [
        {
          type: 'text',
          name: 'email',
          placeholder: t("myplaceonline.identities.email"),
          autofocus: true
        }
      ]
    }) do |child_fields, childproperty|
  %>
    <%= myp_text_field(child_fields, :email, "myplaceonline.identities.email", childproperty.email) %>
    <%= myp_check_box(child_fields, :secondary, "myplaceonline.identities.email_secondary") %>
  <% end %>

  <%=
    render(layout: "myplaceonline/childproperties", locals: {
      f: identity_fields,
      heading: t("myplaceonline.identities.phones"),
      childpropertiesname: :identity_phones,
      childproperties: obj.company_identity.identity_phones,
      deletebutton: t("myplaceonline.identities.delete_phone"),
      addbutton: t("myplaceonline.identities.add_phone"),
      expanded: obj.company_identity.identity_phones.length > 0,
      formjson: [
        {
          type: 'text',
          name: 'number',
          placeholder: t("myplaceonline.identities.phone"),
          autofocus: true
        },
        {
          type: 'select',
          name: 'phone_type',
          options: IdentityPhone::PHONE_TYPES.map{|x,y| [I18n.t(x),y]}.as_json,
          placeholder: t("myplaceonline.identity_phones.phone_type")
        }
      ]
    }) do |child_fields, childproperty|
  %>
    <%= myp_text_field(child_fields, :number, "myplaceonline.identities.phone", childproperty.number) %>
    <%= myp_select(child_fields, :phone_type, "myplaceonline.identity_phones.phone_type", Myp.translate_options(IdentityPhone::PHONE_TYPES), childproperty.phone_type) %>
  <% end %>

  <%=
    render(layout: "myplaceonline/childproperties", locals: {
      f: f,
      heading: t("myplaceonline.companies.interactions"),
      childpropertiesname: :company_interactions,
      childproperties: obj.company_interactions,
      deletebutton: t("myplaceonline.companies.delete_interaction"),
      addbutton: t("myplaceonline.companies.add_interaction"),
      expanded: obj.company_interactions.length > 0,
      formjson: [
        {
          type: :renderpartial,
          partial: "myplaceonline/select_or_create",
          heading: t("myplaceonline.companies.interaction"),
          objform: "company_interactions/form",
          only_new: true,
          edit: false,
          autofocus: true
        }
      ]
    }) do |child_fields, childproperty|
  %>
    <%= render partial: "company_interactions/form", locals: { obj: childproperty || CompanyInteraction.build, edit: edit, autofocus: false, f: child_fields } %>
  <% end %>
  
  <% if !simpleform %>

    <%=
      render(layout: "myplaceonline/childproperties", locals: {
        f: identity_fields,
        heading: t("myplaceonline.identities.locations"),
        childpropertiesname: :identity_locations,
        childproperties: obj.company_identity.identity_locations,
        deletebutton: t("myplaceonline.identities.delete_location"),
        addbutton: t("myplaceonline.identities.add_location"),
        expanded: obj.company_identity.identity_locations.length > 0,
        formjson: [
          {
            type: :renderpartial,
            name: :location_attributes,
            partial: "myplaceonline/select_or_create",
            heading: t("myplaceonline.identities.location"),
            objform: "locations/form",
            existingobjurl: "location_path",
            searchurl: "/locations.json?perpage=0",
            edit: false,
            autofocus: true
          },
          {
            type: :checkbox,
            name: :secondary,
            placeholder: t("myplaceonline.identities.location_secondary")
          }
        ]
      }) do |child_fields, childproperty|
    %>
      <%=
        render partial: "myplaceonline/select_or_create", locals: {
          f: child_fields,
          name: :location_attributes,
          existingobj: childproperty.location,
          heading: t("myplaceonline.identities.location"),
          objform: "locations/form",
          existingobjurl: "location_path",
          searchurl: "/locations.json?perpage=0",
          edit: edit,
          autofocus: false
        }
      %>
      <%= myp_check_box(child_fields, :secondary, "myplaceonline.identities.location_secondary") %>
    <% end %>
    
    <%=
      render partial: "myplaceonline/pictures_form", locals: {
        f: identity_fields,
        obj: obj.company_identity,
        pictures_field: :identity_pictures,
        item_placeholder: "myplaceonline.identity_files.file",
        heading: "myplaceonline.identity_files.files",
        addbutton: "myplaceonline.identity_files.add_file",
        addbutton_multi: "myplaceonline.identity_files.add_files",
        deletebutton: "myplaceonline.identity_files.delete_file"
      }
    %>
    
    <%=
      input_field(
        form: identity_fields,
        type: Myp::FIELD_TEXT_AREA,
        name: :notes,
        value: obj.company_identity.notes,
        placeholder: "myplaceonline.general.notes",
        collapsed: obj.company_identity.notes.blank?,
        placeholder_prefix: Myp.instance_to_category_human_readable(obj).singularize,
      )
    %>

  <% end %>

<% end %>
